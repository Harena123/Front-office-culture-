{"ast":null,"code":"var _jsxFileName = \"D:\\\\Andrianina\\\\Work\\\\Web\\\\Back\\\\Front-office-culture-\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Login from \"../components/Login\";\nimport { login } from \"../springApi\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const handleLogin = async credentials => {\n    try {\n      // Call the login function to authenticate with the backend\n      const user = await login(credentials);\n      console.log(credentials);\n\n      // Optionally, store user information in the app state or context\n      console.log(\"User logged in:\", user);\n\n      // Use navigate function to redirect to '/terrainNonValide'\n      // navigate(\"/terrainNonValide\");\n    } catch (error) {\n      console.error(\"Login failed:\", error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","Login","login","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","navigate","handleLogin","credentials","user","console","log","error","message","children","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Andrianina/Work/Web/Back/Front-office-culture-/src/pages/LoginPage.js"],"sourcesContent":["import React from \"react\";\r\nimport Login from \"../components/Login\";\r\nimport { login } from \"../springApi\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst LoginPage = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (credentials) => {\r\n    try {\r\n      // Call the login function to authenticate with the backend\r\n      const user = await login(credentials);\r\n      console.log(credentials);\r\n\r\n      // Optionally, store user information in the app state or context\r\n      console.log(\"User logged in:\", user);\r\n\r\n      // Use navigate function to redirect to '/terrainNonValide'\r\n      // navigate(\"/terrainNonValide\");\r\n    } catch (error) {\r\n      console.error(\"Login failed:\", error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Login onLogin={handleLogin} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAASC,KAAK,QAAQ,cAAc;AACpC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAE9B,MAAMM,WAAW,GAAG,MAAOC,WAAW,IAAK;IACzC,IAAI;MACF;MACA,MAAMC,IAAI,GAAG,MAAMT,KAAK,CAACQ,WAAW,CAAC;MACrCE,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;;MAExB;MACAE,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,IAAI,CAAC;;MAEpC;MACA;IACF,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,eAAe,EAAEA,KAAK,CAACC,OAAO,CAAC;IAC/C;EACF,CAAC;EAED,oBACEV,OAAA;IAAAW,QAAA,eACEX,OAAA,CAACJ,KAAK;MAACgB,OAAO,EAAER;IAAY;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEV,CAAC;AAACd,EAAA,CAxBID,SAAS;EAAA,QACIH,WAAW;AAAA;AAAAmB,EAAA,GADxBhB,SAAS;AA0Bf,eAAeA,SAAS;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}